
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.kubeTasker.kubeTasker.pkg.apis.workflow.v1alpha1;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option (gogoproto.marshaler_all) = true;
option (gogoproto.stable_marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_enum_prefix_all) = false;
option (gogoproto.goproto_getters_all) = false;
option go_package = "github.com/kubeTasker/kubeTasker/pkg/apis/workflow/v1alpha1";

// Arguments to a template
message Arguments {
  // Parameters is the list of parameters to pass to the template or workflow
  repeated Parameter parameters = 1 [(gogoproto.customname) = "Parameters", (gogoproto.nullable) = false];

  // Artifacts is the list of artifacts to pass to the template or workflow
  repeated Artifact artifacts = 2 [(gogoproto.customname) = "Artifacts", (gogoproto.nullable) = false];
}

// Artifact indicates an artifact to place at a specified path
message Artifact {
  // name of the artifact. must be unique within a template's inputs/outputs.
  optional string name = 1 [(gogoproto.customname) = "Name", (gogoproto.nullable) = false];

  // Path is the container path to the artifact
  optional string path = 2 [(gogoproto.customname) = "Path", (gogoproto.nullable) = false];

  // mode bits to use on this file, must be a value between 0 and 0777
  // set when loading input artifacts.
  optional int32 mode = 3 [(gogoproto.customname) = "Mode"];

  // From allows an artifact to reference an artifact from a previous step
  optional string from = 4 [(gogoproto.customname) = "From", (gogoproto.nullable) = false];

  // ArtifactLocation contains the location of the artifact
  optional ArtifactLocation artifactLocation = 5 [(gogoproto.customname) = "ArtifactLocation", (gogoproto.nullable) = false];
}

// ArtifactLocation describes a location for a single or multiple artifacts.
// It is used as single artifact in the context of inputs/outputs (e.g. outputs.artifacts.artname).
// It is also used to describe the location of multiple artifacts such as the archive location
// of a single workflow step, which the executor will use as a default location to store its files.
message ArtifactLocation {
  // S3 contains S3 artifact location details
  optional S3Artifact s3 = 1 [(gogoproto.customname) = "S3"];

  // Git contains git artifact location details
  optional GitArtifact git = 2 [(gogoproto.customname) = "Git"];

  // HTTP contains HTTP artifact location details
  optional HTTPArtifact http = 3 [(gogoproto.customname) = "HTTP"];

  // Artifactory contains artifactory artifact location details
  optional ArtifactoryArtifact artifactory = 4 [(gogoproto.customname) = "Artifactory"];

  // Raw contains raw artifact location details
  optional RawArtifact raw = 5 [(gogoproto.customname) = "Raw"];
}

// ArtifactoryArtifact is the location of an artifactory artifact
message ArtifactoryArtifact {
  // URL of the artifact
  optional string url = 1 [(gogoproto.customname) = "URL", (gogoproto.nullable) = false];

  optional ArtifactoryAuth artifactoryAuth = 2 [(gogoproto.customname) = "ArtifactoryAuth", (gogoproto.nullable) = false];
}

// ArtifactoryAuth describes the secret selectors required for authenticating to artifactory
message ArtifactoryAuth {
  // UsernameSecret is the secret selector to the repository username
  optional k8s.io.api.core.v1.SecretKeySelector usernameSecret = 1 [(gogoproto.customname) = "UsernameSecret"];

  // PasswordSecret is the secret selector to the repository password
  optional k8s.io.api.core.v1.SecretKeySelector passwordSecret = 2 [(gogoproto.customname) = "PasswordSecret"];
}

// GitArtifact is the location of an git artifact
message GitArtifact {
  // Repo is the git repository
  optional string repo = 1 [(gogoproto.customname) = "Repo", (gogoproto.nullable) = false];

  // Revision is the git commit, tag, branch to checkout
  optional string revision = 2 [(gogoproto.customname) = "Revision", (gogoproto.nullable) = false];

  // UsernameSecret is the secret selector to the repository username
  optional k8s.io.api.core.v1.SecretKeySelector usernameSecret = 3 [(gogoproto.customname) = "UsernameSecret"];

  // PasswordSecret is the secret selector to the repository password
  optional k8s.io.api.core.v1.SecretKeySelector passwordSecret = 4 [(gogoproto.customname) = "PasswordSecret"];
}

// HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
message HTTPArtifact {
  // URL of the artifact
  optional string url = 1 [(gogoproto.customname) = "URL", (gogoproto.nullable) = false];
}

// Inputs are the mechanism for passing parameters, artifacts, volumes from one template to another
message Inputs {
  // Parameters are a list of parameters passed as inputs
  repeated Parameter parameters = 1 [(gogoproto.customname) = "Parameters", (gogoproto.nullable) = false];

  // Artifact are a list of artifacts passed as inputs
  repeated Artifact artifacts = 2 [(gogoproto.customname) = "Artifacts", (gogoproto.nullable) = false];
}

// Item expands a single workflow step into multiple parallel steps
// The value of Item can be a map, string, bool, or number
//
// +protobuf=true
// +protobuf.options.(gogoproto.goproto_stringer)=false
// +k8s:openapi-gen=true
message Item {
  option (gogoproto.goproto_stringer) = false;
  option (gogoproto.stringer) = false;

  optional int64 type = 1 [(gogoproto.casttype) = "Type", (gogoproto.customname) = "Type", (gogoproto.nullable) = false];

  optional string numVal = 2 [(gogoproto.casttype) = "encoding/json.Number", (gogoproto.customname) = "NumVal", (gogoproto.nullable) = false];

  optional bool boolVal = 3 [(gogoproto.customname) = "BoolVal", (gogoproto.nullable) = false];

  optional string strVal = 4 [(gogoproto.customname) = "StrVal", (gogoproto.nullable) = false];

  map<string, ItemValue> mapVal = 5 [(gogoproto.customname) = "MapVal", (gogoproto.nullable) = false];

  repeated ItemValue listVal = 6 [(gogoproto.customname) = "ListVal", (gogoproto.nullable) = false];
}

// +protobuf=true
// +protobuf.options.(gogoproto.goproto_stringer)=false
// +k8s:openapi-gen=true
message ItemValue {
  option (gogoproto.goproto_stringer) = false;
  option (gogoproto.stringer) = false;

  optional int64 type = 1 [(gogoproto.casttype) = "Type", (gogoproto.customname) = "Type", (gogoproto.nullable) = false];

  optional string numVal = 2 [(gogoproto.casttype) = "encoding/json.Number", (gogoproto.customname) = "NumVal", (gogoproto.nullable) = false];

  optional bool boolVal = 3 [(gogoproto.customname) = "BoolVal", (gogoproto.nullable) = false];

  optional string strVal = 4 [(gogoproto.customname) = "StrVal", (gogoproto.nullable) = false];

  map<string, string> mapVal = 5 [(gogoproto.customname) = "MapVal", (gogoproto.nullable) = false];

  repeated bytes listVal = 6 [(gogoproto.casttype) = "encoding/json.RawMessage", (gogoproto.customname) = "ListVal"];
}

// NodeStatus contains status information about an individual node in the workflow
// +k8s:openapi-gen=false
message NodeStatus {
  // ID is a unique identifier of a node within the worklow
  // It is implemented as a hash of the node name, which makes the ID deterministic
  optional string id = 1 [(gogoproto.customname) = "ID", (gogoproto.nullable) = false];

  // Name is a human readable representation of the node in the node tree
  // It can represent a container, step group, or the entire workflow
  optional string name = 2 [(gogoproto.customname) = "Name", (gogoproto.nullable) = false];

  // Phase a simple, high-level summary of where the node is in its lifecycle.
  // Can be used as a state machine.
  optional string phase = 3 [(gogoproto.casttype) = "NodePhase", (gogoproto.customname) = "Phase", (gogoproto.nullable) = false];

  // A human readable message indicating details about why the node is in this condition.
  optional string message = 4 [(gogoproto.customname) = "Message", (gogoproto.nullable) = false];

  // Time at which this node started
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time startedAt = 5 [(gogoproto.customname) = "StartedAt", (gogoproto.nullable) = false];

  // Time at which this node completed
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time finishedAt = 6 [(gogoproto.customname) = "FinishedAt", (gogoproto.nullable) = false];

  // PodIP captures the IP of the pod for daemoned steps
  optional string podIP = 7 [(gogoproto.customname) = "PodIP", (gogoproto.nullable) = false];

  // Daemoned tracks whether or not this node was daemoned and need to be terminated
  optional bool daemoned = 8 [(gogoproto.customname) = "Daemoned"];

  // RetryStrategy contains retry information about the node
  optional RetryStrategy retryStrategy = 9 [(gogoproto.customname) = "RetryStrategy"];

  // Outputs captures output parameter values and artifact locations
  optional Outputs outputs = 10 [(gogoproto.customname) = "Outputs"];

  // Children is a list of child node IDs
  repeated string children = 11 [(gogoproto.customname) = "Children"];
}

// Outputs hold parameters, artifacts, and results from a step
message Outputs {
  // Parameters holds the list of output parameters produced by a step
  repeated Parameter parameters = 1 [(gogoproto.customname) = "Parameters", (gogoproto.nullable) = false];

  // Artifacts holds the list of output artifacts produced by a step
  repeated Artifact artifacts = 2 [(gogoproto.customname) = "Artifacts", (gogoproto.nullable) = false];

  // Result holds the result (stdout) of a script template
  optional string result = 3 [(gogoproto.customname) = "Result"];
}

// Parameter indicate a passed string parameter to a service template with an optional default value
message Parameter {
  // Name is the parameter name
  optional string name = 1 [(gogoproto.customname) = "Name", (gogoproto.nullable) = false];

  // Default is the default value to use for an input parameter if a value was not supplied
  optional string default = 2 [(gogoproto.customname) = "Default"];

  // Value is the literal value to use for the parameter.
  // If specified in the context of an input parameter, the value takes precedence over any passed values
  optional string value = 3 [(gogoproto.customname) = "Value"];

  // ValueFrom is the source for the output parameter's value
  optional ValueFrom valueFrom = 4 [(gogoproto.customname) = "ValueFrom"];
}

// RawArtifact allows raw string content to be placed as an artifact in a container
message RawArtifact {
  // Data is the string contents of the artifact
  optional string data = 1 [(gogoproto.customname) = "Data", (gogoproto.nullable) = false];
}

// ResourceTemplate is a template subtype to manipulate kubernetes resources
message ResourceTemplate {
  // Action is the action to perform to the resource.
  // Must be one of: get, create, apply, delete, replace
  optional string action = 1 [(gogoproto.customname) = "Action", (gogoproto.nullable) = false];

  // Manifest contains the kubernetes manifest
  optional string manifest = 2 [(gogoproto.customname) = "Manifest", (gogoproto.nullable) = false];

  // SuccessCondition is a label selector expression which describes the conditions
  // of the k8s resource in which it is acceptable to proceed to the following step
  optional string successCondition = 3 [(gogoproto.customname) = "SuccessCondition", (gogoproto.nullable) = false];

  // FailureCondition is a label selector expression which describes the conditions
  // of the k8s resource in which the step was considered failed
  optional string failureCondition = 4 [(gogoproto.customname) = "FailureCondition", (gogoproto.nullable) = false];
}

// RetryStrategy provides controls on how to retry a workflow step
message RetryStrategy {
  // Limit is the maximum number of attempts when retrying a container
  optional int32 limit = 1 [(gogoproto.customname) = "Limit"];
}

// S3Artifact is the location of an S3 artifact
message S3Artifact {
  optional S3Bucket s3Bucket = 1 [(gogoproto.customname) = "S3Bucket", (gogoproto.nullable) = false];

  // Key is the key in the bucket where the artifact resides
  optional string key = 2 [(gogoproto.customname) = "Key", (gogoproto.nullable) = false];
}

// S3Bucket contains the access information required for interfacing with an S3 bucket
message S3Bucket {
  // Endpoint is the hostname of the bucket endpoint
  optional string endpoint = 1 [(gogoproto.customname) = "Endpoint", (gogoproto.nullable) = false];

  // Bucket is the name of the bucket
  optional string bucket = 2 [(gogoproto.customname) = "Bucket", (gogoproto.nullable) = false];

  // Region contains the optional bucket region
  optional string region = 3 [(gogoproto.customname) = "Region", (gogoproto.nullable) = false];

  // Insecure will connect to the service with TLS
  optional bool insecure = 4 [(gogoproto.customname) = "Insecure"];

  // AccessKeySecret is the secret selector to the bucket's access key
  optional k8s.io.api.core.v1.SecretKeySelector accessKeySecret = 5 [(gogoproto.customname) = "AccessKeySecret", (gogoproto.nullable) = false];

  // SecretKeySecret is the secret selector to the bucket's secret key
  optional k8s.io.api.core.v1.SecretKeySelector secretKeySecret = 6 [(gogoproto.customname) = "SecretKeySecret", (gogoproto.nullable) = false];
}

// Script is a template subtype to enable scripting through code steps
message Script {
  // Image is the container image to run
  optional string image = 1 [(gogoproto.customname) = "Image", (gogoproto.nullable) = false];

  // Command is the interpreter coommand to run (e.g. [python])
  repeated string command = 2 [(gogoproto.customname) = "Command"];

  // Source contains the source code of the script to execute
  optional string source = 3 [(gogoproto.customname) = "Source", (gogoproto.nullable) = false];
}

// Sidecar is a container which runs alongside the main container
message Sidecar {
  optional k8s.io.api.core.v1.Container container = 1 [(gogoproto.customname) = "Container", (gogoproto.nullable) = false];

  optional SidecarOptions sidecarOptions = 2 [(gogoproto.customname) = "SidecarOptions", (gogoproto.nullable) = false];
}

// SidecarOptions provide a way to customize the behavior of a sidecar and how it
// affects the main container.
message SidecarOptions {
  // MirrorVolumeMounts will mount the same volumes specified in the main container
  // to the sidecar (including artifacts), at the same mountPaths. This enables
  // dind daemon to partially see the same filesystem as the main container in
  // order to use features such as docker volume binding
  optional bool mirrorVolumeMounts = 1 [(gogoproto.customname) = "MirrorVolumeMounts"];
}

// Template is a reusable and composable unit of execution in a workflow
message Template {
  // Name is the name of the template
  optional string name = 1 [(gogoproto.customname) = "Name", (gogoproto.nullable) = false];

  // Inputs describe what inputs parameters and artifacts are supplied to this template
  optional Inputs inputs = 2 [(gogoproto.customname) = "Inputs", (gogoproto.nullable) = false];

  // Outputs describe the parameters and artifacts that this template produces
  optional Outputs outputs = 3 [(gogoproto.customname) = "Outputs", (gogoproto.nullable) = false];

  // NodeSelector is a selector to schedule this step of the workflow to be
  // run on the selected node(s). Overrides the selector set at the workflow level.
  map<string, string> nodeSelector = 4 [(gogoproto.customname) = "NodeSelector", (gogoproto.nullable) = false];

  // Affinity sets the pod's scheduling constraints
  // Overrides the affinity set at the workflow level (if any)
  optional k8s.io.api.core.v1.Affinity affinity = 5 [(gogoproto.customname) = "Affinity"];

  // Deamon will allow a workflow to proceed to the next step so long as the container reaches readiness
  optional bool daemon = 6 [(gogoproto.customname) = "Daemon"];

  // Steps define a series of sequential/parallel workflow steps
  repeated WorkflowStep steps = 7 [(gogoproto.customname) = "Steps", (gogoproto.nullable) = false];

  // Container is the main container image to run in the pod
  optional k8s.io.api.core.v1.Container container = 8 [(gogoproto.customname) = "Container"];

  // Script runs a portion of code against an interpreter
  optional Script script = 9 [(gogoproto.customname) = "Script"];

  // Resource template subtype which can run k8s resources
  optional ResourceTemplate resource = 10 [(gogoproto.customname) = "Resource"];

  // Sidecars is a list of containers which run alongside the main container
  // Sidecars are automatically killed when the main container completes
  repeated Sidecar sidecars = 11 [(gogoproto.customname) = "Sidecars", (gogoproto.nullable) = false];

  // Location in which all files related to the step will be stored (logs, artifacts, etc...).
  // Can be overridden by individual items in Outputs. If omitted, will use the default
  // artifact repository location configured in the controller, appended with the
  // <workflowname>/<nodename> in the key.
  optional ArtifactLocation archiveLocation = 12 [(gogoproto.customname) = "ArchiveLocation"];

  // Optional duration in seconds relative to the StartTime that the pod may be active on a node
  // before the system actively tries to terminate the pod; value must be positive integer
  // This field is only applicable to container and script templates.
  optional int64 activeDeadlineSeconds = 13 [(gogoproto.customname) = "ActiveDeadlineSeconds"];

  // RetryStrategy describes how to retry a template when it fails
  optional RetryStrategy retryStrategy = 14 [(gogoproto.customname) = "RetryStrategy"];
}

// ValueFrom describes a location in which to obtain the value to a parameter
message ValueFrom {
  // Path in the container to retrieve an output parameter value from in container templates
  optional string path = 1 [(gogoproto.customname) = "Path", (gogoproto.nullable) = false];

  // JSONPath of a resource to retrieve an output parameter value from in resource templates
  optional string jsonPath = 2 [(gogoproto.customname) = "JSONPath", (gogoproto.nullable) = false];

  // JQFilter expression against the resource object in resource templates
  optional string jqFilter = 3 [(gogoproto.customname) = "JQFilter", (gogoproto.nullable) = false];

  // Parameter reference to a step or dag task in which to retrieve an output parameter value from
  // (e.g. '{{steps.mystep.outputs.myparam}}')
  optional string parameter = 4 [(gogoproto.customname) = "Parameter", (gogoproto.nullable) = false];
}

// Workflow is the definition of a workflow resource
// +genclient
// +genclient:noStatus
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message Workflow {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1 [(gogoproto.customname) = "ObjectMeta", (gogoproto.nullable) = false];

  optional WorkflowSpec spec = 2 [(gogoproto.customname) = "Spec", (gogoproto.nullable) = false];

  optional WorkflowStatus status = 3 [(gogoproto.customname) = "Status", (gogoproto.nullable) = false];
}

// WorkflowList is list of Workflow resources
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message WorkflowList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1 [(gogoproto.customname) = "ListMeta", (gogoproto.nullable) = false];

  repeated Workflow items = 2 [(gogoproto.customname) = "Items", (gogoproto.nullable) = false];
}

// WorkflowSpec is the specification of a Workflow.
message WorkflowSpec {
  // Templates is a list of workflow templates used in a workflow
  repeated Template templates = 1 [(gogoproto.customname) = "Templates", (gogoproto.nullable) = false];

  // Entrypoint is a template reference to the starting point of the workflow
  optional string entrypoint = 2 [(gogoproto.customname) = "Entrypoint", (gogoproto.nullable) = false];

  // Arguments contain the parameters and artifacts sent to the workflow entrypoint
  // Parameters are referencable globally using the 'workflow' variable prefix.
  // e.g. {{workflow.parameters.myparam}}
  optional Arguments arguments = 3 [(gogoproto.customname) = "Arguments", (gogoproto.nullable) = false];

  // ServiceAccountName is the name of the ServiceAccount to run all pods of the workflow as.
  optional string serviceAccountName = 4 [(gogoproto.customname) = "ServiceAccountName", (gogoproto.nullable) = false];

  // Volumes is a list of volumes that can be mounted by containers in a workflow.
  repeated k8s.io.api.core.v1.Volume volumes = 5 [(gogoproto.customname) = "Volumes", (gogoproto.nullable) = false];

  // VolumeClaimTemplates is a list of claims that containers are allowed to reference.
  // The Workflow controller will create the claims at the beginning of the workflow
  // and delete the claims upon completion of the workflow
  repeated k8s.io.api.core.v1.PersistentVolumeClaim volumeClaimTemplates = 6 [(gogoproto.customname) = "VolumeClaimTemplates", (gogoproto.nullable) = false];

  // NodeSelector is a selector which will result in all pods of the workflow
  // to be scheduled on the selected node(s). This is able to be overridden by
  // a nodeSelector specified in the template.
  map<string, string> nodeSelector = 7 [(gogoproto.customname) = "NodeSelector", (gogoproto.nullable) = false];

  // Affinity sets the scheduling constraints for all pods in the workflow.
  // Can be overridden by an affinity specified in the template
  optional k8s.io.api.core.v1.Affinity affinity = 8 [(gogoproto.customname) = "Affinity"];

  // ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images
  // in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets
  // can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet.
  // More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  repeated k8s.io.api.core.v1.LocalObjectReference imagePullSecrets = 9 [(gogoproto.customname) = "ImagePullSecrets", (gogoproto.nullable) = false];

  // OnExit is a template reference which is invoked at the end of the
  // workflow, irrespective of the success, failure, or error of the
  // primary workflow.
  optional string onExit = 10 [(gogoproto.customname) = "OnExit", (gogoproto.nullable) = false];
}

// WorkflowStatus contains overall status information about a workflow
// +k8s:openapi-gen=false
message WorkflowStatus {
  // Phase a simple, high-level summary of where the workflow is in its lifecycle.
  optional string phase = 1 [(gogoproto.casttype) = "NodePhase", (gogoproto.customname) = "Phase", (gogoproto.nullable) = false];

  // Time at which this workflow started
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time startedAt = 2 [(gogoproto.customname) = "StartedAt", (gogoproto.nullable) = false];

  // Time at which this workflow completed
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time finishedAt = 3 [(gogoproto.customname) = "FinishedAt", (gogoproto.nullable) = false];

  // A human readable message indicating details about why the workflow is in this condition.
  optional string message = 4 [(gogoproto.customname) = "Message", (gogoproto.nullable) = false];

  // Nodes is a mapping between a node ID and the node's status.
  map<string, NodeStatus> nodes = 5 [(gogoproto.customname) = "Nodes", (gogoproto.nullable) = false];

  // PersistentVolumeClaims tracks all PVCs that were created as part of the workflow.
  // The contents of this list are drained at the end of the workflow.
  repeated k8s.io.api.core.v1.Volume persistentVolumeClaims = 6 [(gogoproto.customname) = "PersistentVolumeClaims", (gogoproto.nullable) = false];
}

// WorkflowStep is a reference to a template to execute in a series of step
message WorkflowStep {
  // Name of the step
  optional string name = 1 [(gogoproto.customname) = "Name", (gogoproto.nullable) = false];

  // Template is a reference to the template to execute as the step
  optional string template = 2 [(gogoproto.customname) = "Template", (gogoproto.nullable) = false];

  // Arguments hold arguments to the template
  optional Arguments arguments = 3 [(gogoproto.customname) = "Arguments", (gogoproto.nullable) = false];

  // WithItems expands a step into multiple parallel steps from the items in the list
  // TODO(jessesuen): kube-openapi cannot handle interfaces{}
  // The right solution is to create a new MapOrString struct like IntOrString
  // See: k8s.io/apimachinery/pkg/util/intstr/intstr.go
  // +k8s:openapi-gen=false
  repeated Item withItems = 4 [(gogoproto.customname) = "WithItems", (gogoproto.nullable) = false];

  // WithParam expands a step into from the value in the parameter
  optional string withParam = 5 [(gogoproto.customname) = "WithParam", (gogoproto.nullable) = false];

  // When is an expression in which the step should conditionally execute
  optional string when = 6 [(gogoproto.customname) = "When", (gogoproto.nullable) = false];
}

